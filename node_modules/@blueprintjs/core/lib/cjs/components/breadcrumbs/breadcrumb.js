"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.Breadcrumb = void 0;
const tslib_1 = require("tslib");
const jsx_runtime_1 = require("react/jsx-runtime");
/*
 * Copyright 2016 Palantir Technologies, Inc. All rights reserved.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
const classnames_1 = tslib_1.__importDefault(require("classnames"));
const common_1 = require("../../common");
const icon_1 = require("../icon/icon");
/**
 * Breadcrumb component.
 *
 * @see https://blueprintjs.com/docs/#core/components/breadcrumbs
 */
const Breadcrumb = props => {
    const classes = (0, classnames_1.default)(common_1.Classes.BREADCRUMB, {
        [common_1.Classes.BREADCRUMB_CURRENT]: props.current,
        [common_1.Classes.DISABLED]: props.disabled,
    }, props.className);
    const icon = props.icon != null ? (0, jsx_runtime_1.jsx)(icon_1.Icon, { title: props.iconTitle, icon: props.icon }) : undefined;
    if (props.href == null && props.onClick == null) {
        return ((0, jsx_runtime_1.jsxs)("span", { className: classes, children: [icon, props.text, props.children] }));
    }
    return ((0, jsx_runtime_1.jsxs)("a", { className: classes, href: props.href, onClick: props.disabled ? undefined : props.onClick, onFocus: props.disabled ? undefined : props.onFocus, tabIndex: props.disabled ? undefined : 0, target: props.target, children: [icon, props.text, props.children] }));
};
exports.Breadcrumb = Breadcrumb;
//# sourceMappingURL=breadcrumb.js.map